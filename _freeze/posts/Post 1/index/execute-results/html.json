{
  "hash": "cdc27a6e1086cea107a4356756918e79",
  "result": {
    "markdown": "---\ntitle: \"Post #1 Sepsis Survival Analysis\"\nauthor: \"Alec Wahl\"\ndate: \"2023-11-05\"\ncategories: [analysis]\n---\n\n\n![](images/sepsisphoto.jpg){width=\"390\"}\n\nThis is the first post in a Quarto blog. Welcome!\n\nIn this post, we will analyze Sepsis Survival rates and concluded what possible variables can lead to higher mortality rates from sepsis. This data comes from a primary cohort of hospitalized subjects between 2011 and 2012 in Norway. Found on keggle open source\\[Sepsis Survival Prediction\\](https://www.kaggle.com/datasets/joebeachcapital/sepsis-survival-minimal-clinical-records)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(parsnip)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ─────────────────── tidyverse 2.0.0.9000 ──\n✔ dplyr     1.1.3     ✔ purrr     1.0.2\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\n\nlibrary(lmtest)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: zoo\n\nAttaching package: 'zoo'\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n```\n:::\n\n```{.r .cell-code}\nlibrary(broom)\nlibrary(dplyr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nSepsisdatakaggle <- read_csv(\"C:/Users/alecw/OneDrive/Desktop/Sepsisdatakaggle.csv\", show_col_types = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nSepsisData <- Sepsisdatakaggle %>%\n  rename(Sex = sex_0male_1female) %>%\n  rename(hospitaloutcome=hospital_outcome_1alive_0dead)\n\nSepsisData %>%\n  mutate(Sex = ifelse(Sex > 0, 1, 0))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 110,204 × 4\n   age_years   Sex episode_number hospitaloutcome\n       <dbl> <dbl>          <dbl>           <dbl>\n 1        21     1              1               1\n 2        20     1              1               1\n 3        21     1              1               1\n 4        77     0              1               1\n 5        72     0              1               1\n 6        83     0              1               1\n 7        74     0              1               1\n 8        74     1              1               1\n 9        69     0              1               1\n10        53     1              1               1\n# ℹ 110,194 more rows\n```\n:::\n:::\n\n\nFirst, we load in the data set and rename a couple of the current column names\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmortality_table <- SepsisData %>%\n  group_by(Sex, hospitaloutcome) %>%\n  summarise(count = n())\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Sex'. You can override using the `.groups`\nargument.\n```\n:::\n\n```{.r .cell-code}\nprint(mortality_table)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n# Groups:   Sex [2]\n    Sex hospitaloutcome count\n  <dbl>           <dbl> <int>\n1     0               0  4548\n2     0               1 53425\n3     1               0  3557\n4     1               1 48674\n```\n:::\n\n```{.r .cell-code}\nmortality_table %>%\n  group_by(Sex) %>%\n  summarize(percent_survived = sum(count[hospitaloutcome == 1]) / sum(count) * 100)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n    Sex percent_survived\n  <dbl>            <dbl>\n1     0             92.2\n2     1             93.2\n```\n:::\n:::\n\n\nAbove is a mortality table created to analyze a patient's hospital outcome based on Sex. A hospital outcome of 1 indicates the patient survived. Sex equaling 1 indicates a male. As seen when analyzed, females and males have similar survival rates at 92.15% for females and 93.18% for males.\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(SepsisData, aes(x = factor(age_years), fill = factor(hospitaloutcome==0))) +\n  geom_bar() +\n  labs(title = \"Hospital Outcome by Age\",\n       x = \"Age\",\n       y = \"Count\",\n       fill = \"Hospital Outcome\")+theme(axis.text.x = element_blank())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nGraphed above, we have the Hospital Outcomes for patients as age increases from 0-100. When it equals true, that means we had a negative outcome; as seen above, there is an increase in negative outcomes as patients get older.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSepsisData$Sex <- factor(SepsisData$Sex)\nSepsisData$hospitaloutcome <- factor(SepsisData$hospitaloutcome)\n```\n:::\n\nIn the code block above, we turn our continuous variables into factor variables so we can run the log function correctly, as they are binomial in nature anyway.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_summary1 <- logistic_reg() %>%\n  set_engine(\"glm\") %>%\n  fit(hospitaloutcome ~ episode_number+Sex+age_years, data = SepsisData, family = \"binomial\")\ntidy(model_summary1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 5\n  term           estimate std.error statistic  p.value\n  <chr>             <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)      5.64    0.0689       81.8  0       \n2 episode_number  -0.0257  0.0155       -1.66 9.70e- 2\n3 Sex1             0.178   0.0238        7.49 6.76e-14\n4 age_years       -0.0444  0.000828    -53.6  0       \n```\n:::\n:::\n\nAbove, we chose to run a generalized linear model instead of a regular lm. This is due to our output being of a binomial nature. As seen above, our predictor variables have p values below a significance level of .05 besides episode number. At a biological level, this makes sense because Sepsis is an infection in the bloodstream from any number of different infections. Previous instances of Sepsis would not necessarily mean someone is at risk of further having Sepsis or is better protected from reinfection.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_summary2 <- logistic_reg() %>%\n  set_engine(\"glm\") %>%\n  fit(hospitaloutcome ~Sex+age_years, data = SepsisData, family = \"binomial\")\n\nlr_test <- lrtest(model_summary1$fit, model_summary2$fit) %>%\n  print()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLikelihood ratio test\n\nModel 1: hospitaloutcome ~ episode_number + Sex + age_years\nModel 2: hospitaloutcome ~ Sex + age_years\n  #Df LogLik Df  Chisq Pr(>Chisq)  \n1   4 -26795                       \n2   3 -26796 -1 2.7199     0.0991 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\nOur final change will be to remove the episode_number variable from the original dataset and analyze if the new model is a better fit with a lrtest. Due to the large P value > 0.05, we can assume the larger model, including episode number, does not necessarily indicate a significantly better fit.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSepsisDataUpdated <- SepsisData %>%\n  select(-episode_number)\n```\n:::\n\n\nOur final decision will be to remove episode number and create new data as seen above.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}