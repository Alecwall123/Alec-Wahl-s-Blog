[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Alec Wahl’s Blog",
    "section": "",
    "text": "Post #1 Sepsis Survival Analysis\n\n\n\n\n\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 5, 2023\n\n\nAlec Wahl\n\n\n\n\n\n\n  \n\n\n\n\nPost #2 Swiss Analysis\n\n\n\n\n\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 5, 2023\n\n\nAlec Wahl\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post #2 Swiss Analysis",
    "section": "",
    "text": "We are doing are going to analyze, a built in r-dataset called “swiss” this is a dataset takenfrom various socioeconomic indicators from Swiss Provinces.\nlibrary(readr)\nlibrary(parsnip)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ─────────────────── tidyverse 2.0.0.9000 ──\n✔ dplyr     1.1.3     ✔ purrr     1.0.2\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\n\nlibrary(car)\n\nLoading required package: carData\n\nAttaching package: 'car'\n\nThe following object is masked from 'package:dplyr':\n\n    recode\n\nThe following object is masked from 'package:purrr':\n\n    some\n\nlibrary(lmtest)\n\nLoading required package: zoo\n\nAttaching package: 'zoo'\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\nlibrary(broom)\nlibrary(dplyr)\nlibrary(leaps)\ndata(\"swiss\")\n\nswiss %&gt;%\n  glimpse()\n\nRows: 47\nColumns: 6\n$ Fertility        &lt;dbl&gt; 80.2, 83.1, 92.5, 85.8, 76.9, 76.1, 83.8, 92.4, 82.4,…\n$ Agriculture      &lt;dbl&gt; 17.0, 45.1, 39.7, 36.5, 43.5, 35.3, 70.2, 67.8, 53.3,…\n$ Examination      &lt;int&gt; 15, 6, 5, 12, 17, 9, 16, 14, 12, 16, 14, 21, 14, 19, …\n$ Education        &lt;int&gt; 12, 9, 5, 7, 15, 7, 7, 8, 7, 13, 6, 12, 7, 12, 5, 2, …\n$ Catholic         &lt;dbl&gt; 9.96, 84.84, 93.40, 33.77, 5.16, 90.57, 92.85, 97.16,…\n$ Infant.Mortality &lt;dbl&gt; 22.2, 22.2, 20.2, 20.3, 20.6, 26.6, 23.6, 24.9, 21.0,…\nAs seen above, this data has 6 variables, including various socioeconomic/fertility data from 47 French-speaking Provinces.\nswiss %&gt;%\n  ggplot(aes(x = Examination, y = Fertility)) +\n  geom_point() +\n  labs(title = \"Fertility vs. Examination\",\n       x = \"Examination\",\n       y = \"Fertility\")\n\n\n\nswiss %&gt;%\n  ggplot(aes(x = Education, y = Fertility)) +\n  geom_point() +\n  labs(title = \"Fertility vs. Education\",\n       x = \"Examination\",\n       y = \"Fertility\")\nLet’s first graph fertility vs. examination, then fertility vs education. Due to the nature of education potentially affecting the score someone has on the examination, I will analyze whether adding an interaction term between these two predictor variables will improve the quality of my model.\nswissmodel1 &lt;- linear_reg() %&gt;%\n  set_engine(\"lm\") %&gt;%\n  fit(Fertility ~ Education+Examination, data = swiss)\ntidy(swissmodel1)\n\n# A tibble: 3 × 5\n  term        estimate std.error statistic  p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)   85.3       3.09      27.6  1.95e-29\n2 Education     -0.539     0.192     -2.80 7.50e- 3\n3 Examination   -0.557     0.232     -2.40 2.06e- 2\n\nswissmodel2 &lt;- linear_reg() %&gt;%\n  set_engine(\"lm\") %&gt;%\n  fit(Fertility ~ Education+Examination+Education:Examination, data = swiss)\ntidy(swissmodel2)\n\n# A tibble: 4 × 5\n  term                  estimate std.error statistic  p.value\n  &lt;chr&gt;                    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)           87.2        4.33      20.1   1.70e-23\n2 Education             -0.808      0.463     -1.74  8.86e- 2\n3 Examination           -0.626      0.257     -2.43  1.92e- 2\n4 Education:Examination  0.00920    0.0145     0.637 5.28e- 1\nAs seen above, the p values of all the varibales is below 0.05 so this means these are probably, significant predictor variables. But our interaction term has a p-value of .528 which is well above our significance level of 0.05. So what we will now do is test the models fits against each other.\nanova_result &lt;- anova(swissmodel1$fit,swissmodel2$fit) %&gt;%\n  tidy()%&gt;%\n  print()\n\n# A tibble: 2 × 7\n  term                           df.residual   rss    df sumsq statistic p.value\n  &lt;chr&gt;                                &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 Fertility ~ Education + Exami…          44 3550.    NA  NA      NA      NA    \n2 Fertility ~ Education + Exami…          43 3516.     1  33.2     0.405   0.528\n\nswissmodel1$fit%&gt;%\n  vif()\n\n  Education Examination \n   1.952301    1.952301\nThe ANOVA performed above tells us to go with the model with fewer variables, or in other words, our model without the interaction term. The second test performed gives us the variation inflation factor of our two predictor variables from our original model. I ran this test because it allows us to know if there is collinearity between our predictor variables. Because both scores are below 5, we shouldn’t have to worry about multicollinearity. This further supports the evidence that we probably do not need to add an interaction term."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "Hi, my name is Alec Wahl. Thanks for checking out my blog! I am a Master’s student in Bioengineering at the University of Illinois Urbana-Champaign. I previously completed my undergraduate degree in Bioengineering at the University of Illinois as well. My favorite hobbies are weightlifting and watching live music. Regarding professional interests, I am interested in medical device development and life science consulting."
  },
  {
    "objectID": "posts/Post 1/index.html",
    "href": "posts/Post 1/index.html",
    "title": "Post #1 Sepsis Survival Analysis",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\nIn this post, we will analyze Sepsis Survival rates and conclude what possible variables can lead to higher mortality rates from sepsis. This data comes from a primary cohort of hospitalized subjects between 2011 and 2012 in Norway. Found on keggle open source[Sepsis Survival Prediction](https://www.kaggle.com/datasets/joebeachcapital/sepsis-survival-minimal-clinical-records)\n\nlibrary(readr)\nlibrary(parsnip)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ─────────────────── tidyverse 2.0.0.9000 ──\n✔ dplyr     1.1.3     ✔ purrr     1.0.2\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\n\n\nlibrary(lmtest)\n\nLoading required package: zoo\n\nAttaching package: 'zoo'\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\nlibrary(broom)\nlibrary(dplyr)\n\n\nSepsisdatakaggle &lt;- read_csv(\"C:/Users/alecw/OneDrive/Desktop/Sepsisdatakaggle.csv\", show_col_types = FALSE)\n\n\nSepsisData &lt;- Sepsisdatakaggle %&gt;%\n  rename(Sex = sex_0male_1female) %&gt;%\n  rename(hospitaloutcome=hospital_outcome_1alive_0dead)\n\nSepsisData %&gt;%\n  mutate(Sex = ifelse(Sex &gt; 0, 1, 0))\n\n# A tibble: 110,204 × 4\n   age_years   Sex episode_number hospitaloutcome\n       &lt;dbl&gt; &lt;dbl&gt;          &lt;dbl&gt;           &lt;dbl&gt;\n 1        21     1              1               1\n 2        20     1              1               1\n 3        21     1              1               1\n 4        77     0              1               1\n 5        72     0              1               1\n 6        83     0              1               1\n 7        74     0              1               1\n 8        74     1              1               1\n 9        69     0              1               1\n10        53     1              1               1\n# ℹ 110,194 more rows\n\n\nFirst, we load in the data set and rename a couple of the current column names\n\nmortality_table &lt;- SepsisData %&gt;%\n  group_by(Sex, hospitaloutcome) %&gt;%\n  summarise(count = n())\n\n`summarise()` has grouped output by 'Sex'. You can override using the `.groups`\nargument.\n\nprint(mortality_table)\n\n# A tibble: 4 × 3\n# Groups:   Sex [2]\n    Sex hospitaloutcome count\n  &lt;dbl&gt;           &lt;dbl&gt; &lt;int&gt;\n1     0               0  4548\n2     0               1 53425\n3     1               0  3557\n4     1               1 48674\n\nmortality_table %&gt;%\n  group_by(Sex) %&gt;%\n  summarize(percent_survived = sum(count[hospitaloutcome == 1]) / sum(count) * 100)\n\n# A tibble: 2 × 2\n    Sex percent_survived\n  &lt;dbl&gt;            &lt;dbl&gt;\n1     0             92.2\n2     1             93.2\n\n\nAbove is a mortality table created to analyze a patient’s hospital outcome based on Sex. A hospital outcome of 1 indicates the patient survived. Sex equaling 1 indicates a male. As seen when analyzed, females and males have similar survival rates at 92.15% for females and 93.18% for males.\n\nggplot(SepsisData, aes(x = factor(age_years), fill = factor(hospitaloutcome==0))) +\n  geom_bar() +\n  labs(title = \"Hospital Outcome by Age\",\n       x = \"Age\",\n       y = \"Count\",\n       fill = \"Hospital Outcome\")+theme(axis.text.x = element_blank())\n\n\n\n\nGraphed above, we have the Hospital Outcomes for patients as age increases from 0-100. When it equals true, that means we had a negative outcome; as seen above, there is an increase in negative outcomes as patients get older.\n\nSepsisData$Sex &lt;- factor(SepsisData$Sex)\nSepsisData$hospitaloutcome &lt;- factor(SepsisData$hospitaloutcome)\n\nIn the code block above, we turn our continuous variables into factor variables so we can run the log function correctly, as they are binomial in nature anyway.\n\nmodel_summary1 &lt;- logistic_reg() %&gt;%\n  set_engine(\"glm\") %&gt;%\n  fit(hospitaloutcome ~ episode_number+Sex+age_years, data = SepsisData, family = \"binomial\")\ntidy(model_summary1)\n\n# A tibble: 4 × 5\n  term           estimate std.error statistic  p.value\n  &lt;chr&gt;             &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)      5.64    0.0689       81.8  0       \n2 episode_number  -0.0257  0.0155       -1.66 9.70e- 2\n3 Sex1             0.178   0.0238        7.49 6.76e-14\n4 age_years       -0.0444  0.000828    -53.6  0       \n\n\nAbove, we chose to run a generalized linear model instead of a regular lm. This is due to our output being of a binomial nature. As seen above, our predictor variables have p values below a significance level of .05 besides episode number. At a biological level, this makes sense because Sepsis is an infection in the bloodstream from any number of different infections. Previous instances of Sepsis would not necessarily mean someone is at risk of further having Sepsis or is better protected from reinfection. So, previous episodes of Sepsis would not tell us much about survival chances.\n\nmodel_summary2 &lt;- logistic_reg() %&gt;%\n  set_engine(\"glm\") %&gt;%\n  fit(hospitaloutcome ~Sex+age_years, data = SepsisData, family = \"binomial\")\n\nlr_test &lt;- lrtest(model_summary1$fit, model_summary2$fit) %&gt;%\n  print()\n\nLikelihood ratio test\n\nModel 1: hospitaloutcome ~ episode_number + Sex + age_years\nModel 2: hospitaloutcome ~ Sex + age_years\n  #Df LogLik Df  Chisq Pr(&gt;Chisq)  \n1   4 -26795                       \n2   3 -26796 -1 2.7199     0.0991 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nOur final change will be to remove the episode_number variable from the original dataset and analyze if the new model is a better fit with a lrtest. Due to the large P value &gt; 0.05, we can assume the larger model, including episode number, does not necessarily indicate a significantly better fit.\n\nSepsisDataUpdated &lt;- SepsisData %&gt;%\n  select(-episode_number)\n\nOur final decision will be to remove episode number and create a new data set as seen above."
  },
  {
    "objectID": "posts/post-with-code/index.html#source",
    "href": "posts/post-with-code/index.html#source",
    "title": "Post #2 Swiss Analysis",
    "section": "Source:",
    "text": "Source:\nProject \"16P5\", pages 549–551 in\nMosteller, F. and Tukey, J. W. (1977) Data Analysis and Regression: A Second Course in Statistics. Addison-Wesley, Reading Mass"
  }
]